const getAllStudentsFromDB = async (query: Record<string, unknown>) => {
  // {email: {$regex: query.searchTerm, $option: "i"}}

  const studentSearchableFields = [
    "email",
    "name.lastName",
    "guardian.fatherName",
  ];
  let searchTerm = "";

  if (query?.searchTerm) {
    searchTerm = query?.searchTerm as string;
  }

  // method chaining
  const searchQuery = Student.find({
    $or: studentSearchableFields.map((field) => ({
      [field]: { $regex: searchTerm, $options: "i" },
    })),
  });

  // filtering
  const excludeFields = ["searchTerm", "sort", "limit"];
  const queryObj = { ...query };

  excludeFields.forEach((elm) => delete queryObj[elm]);
  console.log({ query, queryObj });

  const filterQuery = searchQuery
    .find(queryObj)
    .populate("admissionSemester")
    .populate({
      path: "academicDepartment",
      populate: {
        path: "academicFaculty",
      },
    });

  let sort = "-createdAt";

  if (query.sort) {
    sort = query?.sort as string;
  }

  const sortQuery = filterQuery.sort(sort);
  let limit = 1;

  if (query?.limit) {
    limit = query?.limit as number;
  }

  const limitQuery = await sortQuery.limit(limit);
  return limitQuery;
};
